{
    "author": "Pholosho Seloane",
    "company": "none",
    "isPublished" : "true",
    "authorId": "649dab6f39627c0028537e23",
    "title": "Getting Started with Shesha: Building a Membership Management Application",
    "description": "An introductory tutorial into Shesha that will expose you to all the key Shesha concepts you need to quickly start building your own Shesha-based applications.",
    "steps": [
      {
        "title": "What is Shesha?",
        "description": "Overview of Shesha and its key features.",
        "content": [
          {
            "type": "text",
            "title": "Overview of Shesha",
            "description": "What is Shesha?",
            "body": "Shesha is a Low Code Application Framework intended to reduce the effort required to implement typical business applications by over 80%.  It combines and builds on top of other excellent frameworks and libraries (most notably ASP.NET Core, Abp.io,React, NextJs ) and layers on additional Low-Code capabilities to further accelerate the development of business applications. If you are familiar with ASP.NET Core and React, and are in the business of developing business software, and really hate doing the boring and repetitive stuff, Shesha is for you!"
          },
          {
            "type": "image",
            "title": "shesha",
            "description": "What is Shesha?",
            "body": "https://github.com/Boxfusion/shesha-docs/blob/main/docs/assets/SHESHA%20HORIZONTAL.jpg?raw=true"
          }
        ]
      },
  
          {
        "title": "Main Components",
        "description": "Shesha apps consist of 4 main components:",
        "content": [
          {
            "type": "text",
            "title": "Overview of Shesha",
            "description": "What is Shesha?",
            "body": " 1.Database, 2.Backend, 3.Admin Portal, 4.Public Portal"
          },
          {
            "type": "image",
            "title": "components",
            "description": "components",
            "body": "https://github.com/Boxfusion/shesha-docs/blob/main/docs/assets/components.png?raw=true"
          }
        ]
      },
      {
        "title": "Tools Required",
        "description": "Setting up your development environment.",
        "content": [
          {
            "type": "text",
            "title": "Setting up Your Development Environment",
            "description": "Installing required tools.",
            "body": "Before you begin, make sure you have the necessary tools installed, including Visual Studio Code, Visual Studio, and SQL Server Management Studio."
          },
          {
            "type": "text",
            "title": "Node.js Version",
            "description": "Managing Node.js versions.",
            "body": "You'll need Node.js version 12.22.3 for the frontend. You can use Node Version Manager to manage different Node.js versions."
          }
        ]
      },
      {
        "title": "Download Starter Project",
        "description": "Getting the starter project for your application.",
        "content": [
          {
            "type": "text",
            "title": "Getting the Starter Project",
            "description": "Download the starter project.",
            "body": "You can download the starter project from the provided link to kickstart your Shesha application. https://shesha-documentation.readthedocs.io/en/latest/"
          }
        ]
      },
      {
        "title": "Introduction to Shesha",
        "description": "This is an introductory tutorial into Shesha that will expose you to all the key Shesha concepts you will need to allow you to quickly start building your own Shesha-based applications",
        "content": [
          {
            "type": "video",
            "title": "Introduction To shesha",
            "description": "For the tutorial we will take you through the process of building a 'Membership Management' application. The Membership Management could typically be used by a Club to track its members, payment of membership fees and processing of applications. We take you through the process of building the application, step-by-step, whilst exposing you to the key concepts.",
            "body": "https://www.youtube.com/watch?v=SUnw5lKTRU8"
            }
        ]
      },
      {
        "title": "Setting Up Project",
        "description": "We are going to be using the Shesha Starter App to get our project up and running. The Starter project is already configured with most of the configuration and settings you will need to get going.",
        "content": [
          {
            "type": "video",
            "title": "Setting up project",
            "description": " How to setup your project",
            "body": "https://youtu.be/SUnw5lKTRU8?si=fnu3632V9JNdvyDg"
            }
        ]
      },
  
      {
        "title": "Configuring Your First View - Table View",
        "description": "A big benefit of Shesha is that it allows you to create the most common types of views purely through configuration i.e. no coding required.",
        "content": [
          {
            "type": "video",
            "title": "Configure your first view in shesha - table view",
            "description": "In this chapter, we are going to take you through the process of configuring some basic views to allow the user to view the list of members, register new members and view the details of existing members.",
            "body": "https://www.youtube.com/watch?v=eiJnITbyBas&t=111s"
            },
                  {
            "type": "website",
            "title": "Playground form",
            "description": "playground",
            "body": "https://pd-dep-adminportal-test.shesha.dev"
            }
        ]
      },
  
      {
        "title": "Configuring your first view - Main Menu",
        "description": "We will be creating a link in our Main Menu that navigates users to the newly created view.",
        "content": [
          {
            "type": "video",
            "title": "Configuring your first view - Main Menu",
            "description": "Now that we have our Members table setup we will need an easy way to access it for our users. We will be creating a link in our Main Menu that navigates users to the newly created view.",
            "body": "https://www.youtube.com/watch?v=oub6wVZA8lQ"
            }
        ]
      },
      {
        "title": "Configuring Your First View - Create View",
        "description": "Create View",
        "content": [
          {
            "type": "video",
            "title": "Configuring Your First View - Create View",
            "description": "Now that we have a way to view a list of our Members in a table and can access the table we will need a way to create new members. ",
            "body": "https://www.youtube.com/watch?v=QO82G4F4vQs"
            }
        ]
      },
  
      {
        "title": "Configuring Your First View - Details View",
        "description": "Details View",
        "content": [
          {
            "type": "video",
            "title": "Configuring Your First View - Details View",
            "description": "Now we shall create the Members Details form to allow users to view and edit the details of a member.",
            "body": "https://www.youtube.com/watch?v=nGiwKe0WPxA"
            }
        ]
      },
  
      {
        "title": "Extending the domain model - Backend",
        "description": "customize the model so we can update the information we need to properly track the status and location of members.",
        "content": [
          {
            "type": "video",
            "title": "Backend",
            "description": "customize the model so we can update the information we need to properly track the status and location of members.",
            "body": "https://www.youtube.com/watch?v=NuPnbu8y9Ek"
            }
        ]
      },
  
      {
        "title": "Extending the domain model - Configuration",
        "description": "customize the model so we can update the information we need to properly track the status and location of members.",
        "content": [
          {
            "type": "video",
            "title": "Configuration",
            "description": "Now that we have fully extended our domain model, it is time to go back and update our views so that we can reference our newly created fields in the Member entity.",
            "body": "https://www.youtube.com/watch?v=w2V9QTGbn3U"
            }
        ]
      },
  
      {
        "title": "Extending the domain model - Configuration",
        "description": "customize the model so we can update the information we need to properly track the status and location of members.",
        "content": [
          {
            "type": "video",
            "title": "Configuration",
            "description": "Now that we have fully extended our domain model, it is time to go back and update our views so that we can reference our newly created fields in the Member entity.",
            "body": "https://www.youtube.com/watch?v=w2V9QTGbn3U"
            }
        ]
      },
  
      {
        "title": "Adding New Entities and Child Tables - Backend",
        "description": "Let's say now we would like to be able to track all the payments for each of the members. For this we will need to create a new 'MembershipPayment' Entity and have all payments related to a Member displayed on the details view.",
        "content": [
          {
            "type": "video",
            "title": "Adding New Entities and Child Tables - Backend",
            "description": " For this we will need to create a new 'MembershipPayment' Entity and have all payments related to a Member displayed on the details view.",
            "body": "https://www.youtube.com/watch?v=s_3JMEgjC9I"
            }
        ]
      },
  
      {
        "title": "Adding New Entities and Child Tables - Configuration",
        "description": "Adding Payments to the Member's Details View.",
        "content": [
          {
            "type": "video",
            "title": "Adding New Entities and Child Tables - Configuration",
            "description": " Adding Payments to the Member's Details View.",
            "body": "https://www.youtube.com/watch?v=nB-sAFiKhvI"
            }
        ]
      },
  
      {
        "title": "Creating and Calling Custom APIs - Backend",
        "description": "Until now, although the front-end application is clearly interacting with the back-end to retrieve data, you have not had to explicitly create any APIs for this to happen.",
        "content": [
          {
            "type": "video",
            "title": "Creating and Calling Custom APIs - Backend",
            "description": " Shesha, automatically creates CRUD APIs for all entities in your projects. However, if you want to enforce some custom logic you will need to create new APIs and call them from the front-end.",
            "body": "https://www.youtube.com/watch?v=emMps0a03MI"
            }
        ]
      },
      {
        "title": "Creating and Calling Custom APIs - Configuration",
        "description": "After you have activated the membership, you will notice that the ‘Activate Membership’ button is still active, which should not be the case if the user already has an active membership. We have to disable this button in cases like these.",
        "content": [
          {
            "type": "video",
            "title": "Creating and Calling Custom APIs - Configuration",
            "description": " A standard Details View template comes with a status tag component, which we are going to use to show the status of the user’s membership.",
            "body": "https://www.youtube.com/watch?v=GF69TPNjrAw&t=313s"
            }
        ]
      }
  
    ]
  }
  